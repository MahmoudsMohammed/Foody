@use "variables" as *;
@use "functions" as *;
@use "sass:map";

// media query
@mixin breakpoint($key) {
  $size: map.get($breakpoints, $key);

  @if ($size) {
    @media (width >= $size) {
      @content;
    }
  } @else {
    @error '`#{$key}` does not exist in the $breakpoints';
  }
}

// line clamp
@mixin line-clamp($row-number) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $row-number;
  overflow: hidden;
}

// theme
@mixin theme($theme-name) {
  $theme: map.get($themes, $theme-name);
  // to create variables at level of classes which added to body
  @each $key, $value in $theme {
    --#{$key}: #{$value};
    .bg-#{$key} {
      background-color: #{$value};
    }
    .c-#{$key} {
      color: #{$value};
    }
  }
  // variable local at level of class over ride global if exesist
  background-color: var(--bg);
  border-color: var(--border);
  color: var(--text);
  .muted {
    color: var(--text-muted);
  }
  .surface {
    background-color: var(--surface);
  }
  .primary {
    background-color: var(--primary);
    &:hover {
      background-color: var(--primary-hover);
    }
  }
  .error {
    background-color: var(--error);
  }
  .accent {
    background-color: var(--accent);
  }
}

@mixin rowGap($gap) {
  display: flex;
  align-items: center;
  gap: rem($gap);
}

@mixin colGap($gap) {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: rem($gap);
}
